# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestSignup03():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_signup03(self):
    # Test name: Signup_03
    # Step # | name | target | value | comment
    # 1 | open | / |  | 
    self.driver.get("https://open.spotify.com/")
    # 2 | setWindowSize | 974x1032 |  | 
    self.driver.set_window_size(974, 1032)
    # 3 | click | css=.jVdqg |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".jVdqg").click()
    # 4 | mouseOver | css=.ButtonInner-sc-14ud5tc-0 > div:nth-child(2) |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".ButtonInner-sc-14ud5tc-0 > div:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 5 | mouseOut | css=.ButtonInner-sc-14ud5tc-0 > div:nth-child(2) |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 6 | click | id=email |  | 
    self.driver.find_element(By.ID, "email").click()
    # 7 | type | id=email | qlc47720@omeie.com | 
    self.driver.find_element(By.ID, "email").send_keys("qlc47720@omeie.com")
    # 8 | click | id=password |  | 
    self.driver.find_element(By.ID, "password").click()
    # 9 | type | id=password | abcxyz123 | 
    self.driver.find_element(By.ID, "password").send_keys("abcxyz123")
    # 10 | click | id=displayname |  | 
    self.driver.find_element(By.ID, "displayname").click()
    # 11 | type | id=displayname | Xuan Hoan | 
    self.driver.find_element(By.ID, "displayname").send_keys("Xuan Hoan")
    # 12 | click | id=day |  | 
    self.driver.find_element(By.ID, "day").click()
    # 13 | type | id=day | 02 | 
    self.driver.find_element(By.ID, "day").send_keys("02")
    # 14 | click | id=month |  | 
    self.driver.find_element(By.ID, "month").click()
    # 15 | select | id=month | label=Tháng 3 | 
    dropdown = self.driver.find_element(By.ID, "month")
    dropdown.find_element(By.XPATH, "//option[. = 'Tháng 3']").click()
    # 16 | click | id=year |  | 
    self.driver.find_element(By.ID, "year").click()
    # 17 | type | id=year | 2002 | 
    self.driver.find_element(By.ID, "year").send_keys("2002")
    # 18 | click | css=.Radio-sc-tr5kfi-0:nth-child(1) .Indicator-sc-hjfusp-0 |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".Radio-sc-tr5kfi-0:nth-child(1) .Indicator-sc-hjfusp-0").click()
    # 19 | click | css=.Group-sc-u9bcx5-0:nth-child(6) .Indicator-sc-1airx73-0 |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".Group-sc-u9bcx5-0:nth-child(6) .Indicator-sc-1airx73-0").click()
    # 20 | click | css=.dqLIWu |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".dqLIWu").click()
    # 21 | mouseOver | linkText=Chính sách quyền riêng tư của Spotify |  | 
    element = self.driver.find_element(By.LINK_TEXT, "Chính sách quyền riêng tư của Spotify")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 22 | mouseOver | linkText=Hiện tất cả |  | 
    element = self.driver.find_element(By.LINK_TEXT, "Hiện tất cả")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 23 | click | css=.KdxlBanhDJjzmHfqhP0X > .Svg-sc-ytk21e-0 |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".KdxlBanhDJjzmHfqhP0X > .Svg-sc-ytk21e-0").click()
    # 24 | click | css=.DuEPSADpSwCcO880xjUG:nth-child(1) .Type__TypeElement-sc-goli3j-0 |  | 
    self.vars["window_handles"] = self.driver.window_handles
    # 25 | selectWindow | handle=${win5772} |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".DuEPSADpSwCcO880xjUG:nth-child(1) .Type__TypeElement-sc-goli3j-0").click()
    # 26 | click | css=#change_password > .sc-4847034f-1 |  | 
    self.vars["win5772"] = self.wait_for_window(2000)
    # 27 | click | id=old_password |  | 
    self.driver.switch_to.window(self.vars["win5772"])
    # 28 | type | id=old_password | abcxyz123 | 
    self.driver.find_element(By.CSS_SELECTOR, "#change_password > .sc-4847034f-1").click()
    # 29 | click | id=new_password |  | 
    self.driver.find_element(By.ID, "old_password").click()
    # 30 | type | id=new_password | abcxyz12345 | 
    self.driver.find_element(By.ID, "old_password").send_keys("abcxyz123")
    # 31 | click | id=new_password_confirmation |  | 
    self.driver.find_element(By.ID, "new_password").click()
    # 32 | type | id=new_password_confirmation | abcxyz12345 | 
    self.driver.find_element(By.ID, "new_password").send_keys("abcxyz12345")
    # 33 | click | css=.ButtonInner-sc-14ud5tc-0 |  | 
    self.driver.find_element(By.ID, "new_password_confirmation").click()
    self.driver.find_element(By.ID, "new_password_confirmation").send_keys("abcxyz12345")
    self.driver.find_element(By.CSS_SELECTOR, ".ButtonInner-sc-14ud5tc-0").click()
  
